server.port=9000
#1、spring.web：
# 1.配置国际化的区域信息
# 2.静态资源策略(开启、处理链、缓存)
# 开启静态资源映射规则
#spring.web.resources.add-mappings=true
#
## 设置缓存
#spring.web.resources.cache.period=3600
### 缓存详细合并项控制，覆盖period配置：
### 浏览器第一次请求服务器，服务器告诉浏览器此资源缓存7200秒，7200秒以内的所有此资源访问不用发给服务器请求，7200秒以后发请求给服务器
#spring.web.resources.cache.cachecontrol.max-age=7200
### 共享缓存
#spring.web.resources.cache.cachecontrol.cache-public=true
## 使用资源 last-modified 时间，来对比服务器和浏览器的资源是否相同没有变化。相同返回 304
#spring.web.resources.cache.use-last-modified=true
#
## 自定义静态资源文件夹位置
#spring.web.resources.static-locations=classpath:/a/,classpath:/b/,classpath:/static/
#
## 2、 spring.mvc
### 2.1. 自定义webjars路径前缀
#spring.mvc.webjars-path-pattern=/wj/**
### 2.2. 静态资源访问路径前缀
#spring.mvc.static-path-pattern=/static/**
# 改变路径匹配策略：
# ant_path_matcher 老版策略；
# path_pattern_parser 新版策略；
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
# 开启基于请求参数的内容协商功能。 默认参数名：format
spring.mvc.contentnegotiation.favor-parameter=true
# 指定内容协商时使用的参数名。默认是 format
spring.mvc.contentnegotiation.parameter-name=type
# 增加一种新的内容类型
spring.mvc.contentnegotiation.media-types.yaml=text/yaml
#自定义日期格式
spring.mvc.format.date=yyyy-MM-dd
spring.mvc.format.time=HH:mm:ss
# problemdetails默认是关闭的
spring.mvc.problemdetails.enabled=true
#配置jsp跳转的
#spring.mvc.view.prefix=
# 项目的根路径
#server.servlet.context-path=/demo
# 配置thymeleaf场景
#spring.thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
#开发期间关闭，上线以后开启
spring.thymeleaf.cache=false
#spring.thymeleaf.check-template=false
#国际化配置
spring.messages.basename=messages
spring.messages.encoding=UTF-8
# 当发生错误以后，错误请求转发给 /error 进行处理
# server 开始的都是嵌入式容器（服务器）的配置
server.error.path=/error
# tomcat调优 在这里
#server.tomcat.accept-count=
robot.name=哈哈哈
robot.age=18
robot.email=aaa@qq.com